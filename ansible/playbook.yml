- hosts: localhost
  name: Install 3scale Workshop
  vars:
    # generic
    become_override: no
    ocp_username: opentlc-mgr
    verify_tls: false
    participants: '{{ num_users }}'

    # role
    workshop_ocp_user_password: 'openshift'

    # 3scale
    threescale_oauthclient_secret: '3scaleclientsecret'
    minio_stateful: true

    #  registration
    registration_title: "3scale Workshop"
    registration_user_password: "3scale"
    registration_admin_password: admin123

    # solution explorer
    solution_explorer_client_id: tutorial-web-app
    solution_explorer_image_tag: '1.0.10'
    solution_explorer_image: 'quay.io/gcamposo/tutorial-web-app:{{ solution_explorer_image_tag }}'
    solution_explorer_namespace: "workshop-explorer"
    solution_explorer_walkthrough_locations:
      - 'https://github.com/GuilhermeCamposo/workshop_3scale.git'

    # snapshot operator
    snapshot_operator_project: "openshift-marketplace"
  tasks:

    - name: Check Required Parameters
      fail: msg="This play requires 'server','token' and 'num_users' to be defined"
      when:
        - server is not defined
        - token is not defined
        - num_users is not defined
        - num_users | int > 0

    - name: usercount debug
      debug:
        msg: "Debugging num_users {{ num_users }}"

    - name: create usernames
      set_fact:
        users: "{{ users | default([]) + ['user'+item | string] }}"
      loop: "{{ range(1,((num_users | int) + 1)) | list }}"

    # Figure out paths
    - name: Get openshift console
      k8s_info:
        api_key: '{{ token }}'
        host: '{{ server }}'
        validate_certs: '{{ verify_tls }}'
        kind: Route
        name: console
        namespace: openshift-console
        api_version: route.openshift.io/v1
      register: openshift_console_route

    - name: Set openshift console
      set_fact:
        console_url: "https://{{ openshift_console_route.resources[0].status.ingress[0].host }}"

    - name: Define domain
      set_fact:
        domain : "{{ server | regex_replace('https://api.') | regex_replace(':6443') }}"

    - name: Set Subdomain
      set_fact:
        route_subdomain: "apps.{{ domain }}"

    - name: Provision 3scale
      include_role:
        name: threescale
      vars:
        threescale_project: "threescale"

    - name: Provision SSO
      include_role:
        name: sso
      vars:
        sso_project: "sso"

    - name: Provision Apicurito
      include_role:
        name: apicurito
      vars:
        apicurito_project: "apicurito"

    - name: Provision Microcks
      include_role:
        name: microcks
      vars:
        microcks_project: "microcks"

    - name: Provision Backend Project
      include_role:
        name: backend
      vars:
        POSTGRESQL_USER: dbuser
        POSTGRESQL_PASSWORD: password
        POSTGRESQL_DATABASE: sampledb
        POSTGRESQL_VERSION: latest
        backend_project: "international"
        sso_project: "sso"

    - name: Include import-image
      include_role:
        name: import-image

    - name: Provision User Namespaces
      include_role:
        name: users
      loop: "{{ range(1, num_users|int + 1, 1)|list }}"
      when:
        - num_users|int > 0
      vars:
        shared_namespace: "shared"
        sso_project: "sso"
        fuse_project: "fuse"

    - name: Provision Solution Explorer
      include_role:
        name: solution-explorer
      vars:
        webapp_namespace: "webapp"
        configmap_name: "extra-services"
        apicurito_project: "apicurito"
        microcks_project: "microcks"
        fuse_project: "fuse"
        sso_project: "sso"

    - name: Provision User Registration
      include_role:
        name: registration
      vars:
        registration_namespace: "registration"

    - name: Include APIcast
      include_role:
        name: apicast

    - name: Installation Finished
      debug:
        msg:
          - Installation finished succesfully.
          - 'Registration Page: https://{{ registration_url }} '
          - 'Registration Users` Password: {{ registration_user_password }} '
          - 'Registration Page for Admins: https://{{ registration_url }}/admin '
          - 'Registration Admin Password: {{ registration_admin_password }} '
