- name: Evaluate {{ threescale_project }} namespace
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Namespace
    name: '{{ threescale_project }}'
    state: present

- name: Evaluate 3scale Operator Group
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'threescale-operatorgroup.yaml.j2') }}"

- name: Evaluate 3scale Subscription
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'threescale-subscription.yaml.j2') }}"

- name: Wait for 3scale operator to install
  k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: apimanagers.apps.3scale.net
  register: crd_threescale
  until: crd_threescale.resources | list | length == 1
  retries: 10
  delay: 30

- name: Install Minio
  include_role:
    name: minio

- name: Deploy 3scale S3 auth secret
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'threescale-s3-auth-secret.yaml.j2') }}"

- name: Deploy 3scale API Manager
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'threescale-apimanager.yaml.j2') }}"

# wait to APIManager resource creation
- name: Wait for 3scale pods to be ready
  k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: DeploymentConfig
    namespace: "{{ threescale_project }}"
    name: apicast-production
  register: r_dc
  until:
    - r_dc is defined
    - r_dc.resources is defined
    - r_dc.resources | list | length > 0
    - r_dc.resources[0].status is defined
    - r_dc.resources[0].status.readyReplicas is defined
    - r_dc.resources[0].status.readyReplicas | int >= 1
  retries: 60
  delay: 15

- name: Wait for 3scale Master to be running
  uri:
    url: https://master.{{ route_subdomain }}
    status_code: '200'
  register: result
  until: result.status == 200
  retries: 90
  delay: 30

- name: Provision tenants
  include_tasks: user_tenant.yaml
  loop: "{{ range(1, num_users|int + 1, 1)|list }}"
  when:
    - num_users|int > 0

- name: Provision 3scale OAuthClient
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'threescale-oauthclient.yaml.j2') }}"

- name: Provision 3scale ConfigMap
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: system
        namespace: '{{ threescale_project }}'
      data:
        service_discovery.yml: |
          production:
            enabled: true
            authentication_method: oauth
            oauth_server_type: builtin
            client_id: '3scale'
            client_secret: '{{ threescale_oauthclient_secret }}'

- name: Bounce Pods
  uri:
    url: '{{ server }}/apis/apps.openshift.io/v1/namespaces/{{ threescale_project }}/deploymentconfigs/system-app/instantiate'
    method: POST
    body_format: json
    headers:
      Content-Type: "application/json"
      Accept: application/json
      Authorization: "Bearer {{ token }}"
    body:  "{{ lookup('template', 'deploy-request.json.j2') }}"
    validate_certs: no
    status_code: 201
  loop:
    - system-app
    - system-sidekiq

# wait to system-app resource creation
- name: Wait for 3scale pods to be ready
  k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: DeploymentConfig
    namespace: "{{ threescale_project }}"
    name: system-app
  register: r_dc
  until:
    - r_dc is defined
    - r_dc.resources is defined
    - r_dc.resources | list | length > 0
    - r_dc.resources[0].status is defined
    - r_dc.resources[0].status.readyReplicas is defined
    - r_dc.resources[0].status.readyReplicas | int >= 1
  retries: 60
  delay: 15
